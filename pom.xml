<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>zookeeper-curator-loadbalancer</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>zookeeper-curator-loadbalancer</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.curator/curator-framework -->
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-x-discovery</artifactId>
            <version>4.0.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper -->
        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
            <version>3.4.6</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.jboss.resteasy/resteasy-undertow -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-undertow</artifactId>
            <version>3.6.2.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.undertow/undertow-core -->
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-core</artifactId>
            <version>2.0.16.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.undertow/undertow-servlet -->
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-servlet</artifactId>
            <version>2.0.16.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code</groupId>
                    <artifactId>zookeeper-maven-plugin</artifactId>
                    <version>1.1.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>manager</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.example.manager.LoadManager</mainClass>
                            <arguments>
                                <argument>18000</argument>
                            </arguments>
                            <systemProperties>
                                <!--for log4j-->
                                <systemProperty>
                                    <key>service.name</key>
                                    <value>manager</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>worker_1</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.example.worker.TaskWorker</mainClass>
                            <arguments>
                                <argument>worker_1</argument>
                                <argument>18005</argument>
                            </arguments>
                            <systemProperties>
                                <!--for log4j-->
                                <systemProperty>
                                    <key>service.name</key>
                                    <value>worker_1</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>worker_2</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.example.worker.TaskWorker</mainClass>
                            <arguments>
                                <argument>worker_2</argument>
                                <argument>18006</argument>
                            </arguments>
                            <systemProperties>
                                <!--for log4j-->
                                <systemProperty>
                                    <key>service.name</key>
                                    <value>worker_2</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                    <execution>
                        <id>worker_3</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.example.worker.TaskWorker</mainClass>
                            <arguments>
                                <argument>worker_3</argument>
                                <argument>18007</argument>
                            </arguments>
                            <systemProperties>
                                <!--for log4j-->
                                <systemProperty>
                                    <key>service.name</key>
                                    <value>worker_3</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.revelc.code</groupId>
                <artifactId>zookeeper-maven-plugin</artifactId>
                <configuration>
                    <!-- This is a unique string to kill the service when finished -->
                    <shutdownString>MyZooKeeperUniqueShutDownString</shutdownString>
                    <!-- This is the port the plugin listens on for the shutdownString -->
                    <shutdownPort>2182</shutdownPort>
                    <!-- Configure the ZooKeeper port; defaults to listening on 127.0.0.1 -->
                    <clientPort>2181</clientPort>

                    <!--Both configurations must be present if you wish to keep data between builds-->
                    <!--<zmpDir>/tmp/zookeeper/zmp</zmpDir>
                    <keepPreviousState>true</keepPreviousState>-->
                </configuration>
                <executions>
                    <execution>
                        <!-- In this example, only one ZooKeeper service is started and the
                        two goals share the same configuration, so the stop goal sends the
                        same shutdown message that the start goal is listening for -->
                        <id>run-zookeeper</id>
                        <goals>
                            <goal>start</goal><!-- runs at pre-integration-test phase -->
                            <goal>stop</goal><!-- runs at post-integration-test phase -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
